{"remainingRequest":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\admin\\Documents\\testProjects\\PythonFlaskVue_Todoapp\\index.vue?vue&type=style&index=0&id=6de5ab34&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\admin\\Documents\\testProjects\\PythonFlaskVue_Todoapp\\index.vue","mtime":1587542566916},{"path":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCnVsLCBsaSB7DQogICAgbGlzdC1zdHlsZTogbm9uZTsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCn0NCi5wb2ludGVyIHsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":".","sourcesContent":["<template lang=\"pug\">\r\ndiv\r\n    h1 todo list\r\n    div\r\n        input(type=\"text\" placeholder=\"task name\" v-model=\"input_task\" @keyup.enter=\"create(input_task)\")\r\n        button(@click=\"create(input_task)\") add\r\n    div\r\n        ul\r\n            li(v-for=\"(item,index) in tasks\")\r\n                input(type=\"checkbox\" v-model=\"item.done\" @change=\"update(item)\")\r\n                span {{item.task}}\r\n                span.pointer(@click=\"remove(item, index)\") ðŸ—‘\r\n\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            input_task: \"\",\r\n            tasks:[]\r\n        }\r\n    },\r\n    created() {\r\n        this.readAll();\r\n    },\r\n    destroyed() {\r\n        axios.delete(\"http://localhost:5000/exit\")\r\n    },\r\n    methods: {\r\n        create(item) {\r\n            if(!item) return;\r\n            axios.post(\"http://localhost:5000/task\",{task:this.input_task})\r\n            .then((response) => {\r\n                const data = response.data\r\n                this.tasks.push({\r\n                    _id: data[0][0],\r\n                    task: this.input_task,\r\n                    done: 0\r\n                });\r\n                this.input_task = \"\";\r\n            });\r\n        },\r\n        readAll() {\r\n            axios.get(\"http://localhost:5000/task\")\r\n                .then((response) => {\r\n                    response.data.forEach((data) => {\r\n                        this.tasks.push({\r\n                            _id: data[0],\r\n                            task: data[1],\r\n                            done: data[2]\r\n                        })\r\n                    });\r\n                });\r\n        },\r\n        update(item) {\r\n            axios.put(\"http://localhost:5000/task\",{_id: item._id, done: item.done})\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                });\r\n        },\r\n        remove(item, index) {\r\n            axios.delete(\"http://localhost:5000/task\",{params: {_id: item._id}})\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                });\r\n            this.tasks.splice(index,1);\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\nul, li {\r\n    list-style: none;\r\n    font-weight: bold;\r\n}\r\n.pointer {\r\n    cursor: pointer;\r\n}\r\n</style>"]}]}